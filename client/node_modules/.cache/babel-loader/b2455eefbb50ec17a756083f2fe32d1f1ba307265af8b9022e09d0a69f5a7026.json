{"ast":null,"code":"var _jsxFileName = \"/home/kripa/Desktop/mern-auth-task-app/client/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\n// src/components/Dashboard.js\nimport { useState, useEffect } from 'react';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  token\n}) => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [task, setTask] = useState({\n    title: '',\n    description: ''\n  });\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await api.getTasks(token);\n        setTasks(response.tasks);\n      } catch (err) {\n        setError('Failed to fetch tasks');\n      }\n    };\n    if (token) fetchTasks();\n  }, [token]);\n  const handleAddTask = async () => {\n    try {\n      const response = await api.addTask(task, token);\n      setTasks([...tasks, response.task]);\n      setTask({\n        title: '',\n        description: ''\n      });\n    } catch (err) {\n      setError('Failed to add task');\n    }\n  };\n  const handleDeleteTask = async taskId => {\n    try {\n      await api.deleteTask(taskId, token);\n      setTasks(tasks.filter(task => task.id !== taskId));\n    } catch (err) {\n      setError('Failed to delete task');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: task.title,\n        onChange: e => setTask({\n          ...task,\n          title: e.target.value\n        }),\n        placeholder: \"Task Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: task.description,\n        onChange: e => setTask({\n          ...task,\n          description: e.target.value\n        }),\n        placeholder: \"Task Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: task.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteTask(task.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"oEpN+aUNYB8toG4lzC00lmdP8VA=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useState","useEffect","api","jsxDEV","_jsxDEV","Dashboard","token","_s","tasks","setTasks","task","setTask","title","description","error","setError","fetchTasks","response","getTasks","err","handleAddTask","addTask","handleDeleteTask","taskId","deleteTask","filter","id","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","_c","$RefreshReg$"],"sources":["/home/kripa/Desktop/mern-auth-task-app/client/src/components/Dashboard.js"],"sourcesContent":["// src/components/Dashboard.js\nimport { useState, useEffect } from 'react';\nimport api from '../services/api';\n\nconst Dashboard = ({ token }) => {\n    const [tasks, setTasks] = useState([]);\n    const [task, setTask] = useState({ title: '', description: '' });\n    const [error, setError] = useState('');\n\n    useEffect(() => {\n        const fetchTasks = async () => {\n            try {\n                const response = await api.getTasks(token);\n                setTasks(response.tasks);\n            } catch (err) {\n                setError('Failed to fetch tasks');\n            }\n        };\n        if (token) fetchTasks();\n    }, [token]);\n\n    const handleAddTask = async () => {\n        try {\n            const response = await api.addTask(task, token);\n            setTasks([...tasks, response.task]);\n            setTask({ title: '', description: '' });\n        } catch (err) {\n            setError('Failed to add task');\n        }\n    };\n\n    const handleDeleteTask = async (taskId) => {\n        try {\n            await api.deleteTask(taskId, token);\n            setTasks(tasks.filter((task) => task.id !== taskId));\n        } catch (err) {\n            setError('Failed to delete task');\n        }\n    };\n\n    return (\n        <div>\n            <h2>Your Tasks</h2>\n            <div>\n                <input\n                    type=\"text\"\n                    value={task.title}\n                    onChange={(e) => setTask({ ...task, title: e.target.value })}\n                    placeholder=\"Task Title\"\n                />\n                <textarea\n                    value={task.description}\n                    onChange={(e) => setTask({ ...task, description: e.target.value })}\n                    placeholder=\"Task Description\"\n                />\n                <button onClick={handleAddTask}>Add Task</button>\n            </div>\n            {error && <p>{error}</p>}\n            <ul>\n                {tasks.map((task) => (\n                    <li key={task.id}>\n                        <p>{task.title}</p>\n                        <p>{task.description}</p>\n                        <button onClick={() => handleDeleteTask(task.id)}>Delete</button>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}